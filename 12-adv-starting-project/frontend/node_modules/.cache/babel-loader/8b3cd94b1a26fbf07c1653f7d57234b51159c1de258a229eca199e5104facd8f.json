{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ktxmt\\\\Desktop\\\\react-assignments\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport EventForm from \"../components/EventForm\";\n// import { json, redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    method: \"post\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\n\n// export async function action({ request, params }) {\n//   const data = await request.formData();\n//   const eventData = {\n//     title: data.get(\"title\"),\n//     image: data.get(\"image\"),\n//     date: data.get(\"date\"),\n//     description: data.get(\"description\"),\n//   };\n//   const response = await fetch(\"http://localhost:8080/events\", {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify(eventData),\n//   });\n\n//   if (response.status === 422) {\n//     return response;\n//   }\n//   if (!response.ok) {\n//     throw json({ message: \"Could not save event.\" }, { status: 500 });\n//   }\n\n//   return redirect(\"/events\");\n// }\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","jsxDEV","_jsxDEV","NewEventPage","method","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ktxmt/Desktop/react-assignments/12-adv-starting-project/frontend/src/pages/NewEvent.js"],"sourcesContent":["import EventForm from \"../components/EventForm\";\r\n// import { json, redirect } from \"react-router-dom\";\r\nfunction NewEventPage() {\r\n  return <EventForm method=\"post\" />;\r\n}\r\n\r\nexport default NewEventPage;\r\n\r\n// export async function action({ request, params }) {\r\n//   const data = await request.formData();\r\n//   const eventData = {\r\n//     title: data.get(\"title\"),\r\n//     image: data.get(\"image\"),\r\n//     date: data.get(\"date\"),\r\n//     description: data.get(\"description\"),\r\n//   };\r\n//   const response = await fetch(\"http://localhost:8080/events\", {\r\n//     method: \"POST\",\r\n//     headers: { \"Content-Type\": \"application/json\" },\r\n//     body: JSON.stringify(eventData),\r\n//   });\r\n\r\n//   if (response.status === 422) {\r\n//     return response;\r\n//   }\r\n//   if (!response.ok) {\r\n//     throw json({ message: \"Could not save event.\" }, { status: 500 });\r\n//   }\r\n\r\n//   return redirect(\"/events\");\r\n// }\r\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,YAAYA,CAAA,EAAG;EACtB,oBAAOD,OAAA,CAACF,SAAS;IAACI,MAAM,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpC;AAACC,EAAA,GAFQN,YAAY;AAIrB,eAAeA,YAAY;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}